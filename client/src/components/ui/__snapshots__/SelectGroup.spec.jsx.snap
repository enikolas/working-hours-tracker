// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectGroup render should show a select component with min props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SelectGroup
    isDisabled={false}
    label="testLabel"
    name="testName"
    onChange={null}
    options={Array []}
    selected=""
    showTextInstead={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <label>
        <span
          className="label"
        >
          testLabel
        </span>
        <select
          disabled={false}
          onChange={[Function]}
          value=""
        />
      </label>,
      "className": "SelectGroup",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="label"
          >
            testLabel
          </span>,
          <select
            disabled={false}
            onChange={[Function]}
            value=""
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "testLabel",
            "className": "label",
          },
          "ref": null,
          "rendered": "testLabel",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "disabled": false,
            "onChange": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": Array [],
          "type": "select",
        },
      ],
      "type": "label",
    },
    "type": "fieldset",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <label>
          <span
            className="label"
          >
            testLabel
          </span>
          <select
            disabled={false}
            onChange={[Function]}
            value=""
          />
        </label>,
        "className": "SelectGroup",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="label"
            >
              testLabel
            </span>,
            <select
              disabled={false}
              onChange={[Function]}
              value=""
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "testLabel",
              "className": "label",
            },
            "ref": null,
            "rendered": "testLabel",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "disabled": false,
              "onChange": [Function],
              "value": "",
            },
            "ref": null,
            "rendered": Array [],
            "type": "select",
          },
        ],
        "type": "label",
      },
      "type": "fieldset",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
