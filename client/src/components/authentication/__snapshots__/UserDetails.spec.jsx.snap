// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserDetails render should render a div for login if auth but has error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserDetails
    changePassword={[Function]}
    userDetailsQuery={
      Object {
        "error": true,
        "loading": false,
        "userDetails": Object {
          "__typename": "UserDetails",
          "dailyContractedHours": "8:00",
          "lastFridayBalance": " 2:20",
          "name": "JOHN DOE",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`UserDetails render should render a div for login if not auth 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserDetails
    changePassword={[Function]}
    userDetailsQuery={
      Object {
        "error": false,
        "loading": false,
        "userDetails": Object {
          "__typename": "UserDetails",
          "dailyContractedHours": "8:00",
          "lastFridayBalance": " 2:20",
          "name": "JOHN DOE",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`UserDetails render should render a welcome div if user auth and no errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserDetails
    changePassword={[Function]}
    userDetailsQuery={
      Object {
        "error": false,
        "loading": false,
        "userDetails": Object {
          "__typename": "UserDetails",
          "dailyContractedHours": "8:00",
          "lastFridayBalance": " 2:20",
          "name": "JOHN DOE",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="employee-name"
        >
          Olá  JOHN
        </div>,
        <nav>
          <UserOptions
            passwordCall={[Function]}
            reportCall={[Function]}
          />
          <li>
            <button
              className="logout"
              onClick={[Function]}
            >
              Sair
            </button>
          </li>
        </nav>,
      ],
      "className": "user-details",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Olá  JOHN",
          "className": "employee-name",
        },
        "ref": null,
        "rendered": "Olá  JOHN",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <UserOptions
              passwordCall={[Function]}
              reportCall={[Function]}
            />,
            <li>
              <button
                className="logout"
                onClick={[Function]}
              >
                Sair
              </button>
            </li>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "passwordCall": [Function],
              "reportCall": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="logout"
                onClick={[Function]}
              >
                Sair
              </button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sair",
                "className": "logout",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Sair",
              "type": "button",
            },
            "type": "li",
          },
        ],
        "type": "nav",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="employee-name"
          >
            Olá  JOHN
          </div>,
          <nav>
            <UserOptions
              passwordCall={[Function]}
              reportCall={[Function]}
            />
            <li>
              <button
                className="logout"
                onClick={[Function]}
              >
                Sair
              </button>
            </li>
          </nav>,
        ],
        "className": "user-details",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Olá  JOHN",
            "className": "employee-name",
          },
          "ref": null,
          "rendered": "Olá  JOHN",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <UserOptions
                passwordCall={[Function]}
                reportCall={[Function]}
              />,
              <li>
                <button
                  className="logout"
                  onClick={[Function]}
                >
                  Sair
                </button>
              </li>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "passwordCall": [Function],
                "reportCall": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="logout"
                  onClick={[Function]}
                >
                  Sair
                </button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sair",
                  "className": "logout",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Sair",
                "type": "button",
              },
              "type": "li",
            },
          ],
          "type": "nav",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`UserDetails render should render loading if loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserDetails
    changePassword={[Function]}
    userDetailsQuery={
      Object {
        "error": false,
        "loading": true,
        "userDetails": Object {
          "__typename": "UserDetails",
          "dailyContractedHours": "8:00",
          "lastFridayBalance": " 2:20",
          "name": "JOHN DOE",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Loading...",
    },
    "ref": null,
    "rendered": "Loading...",
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Loading...",
      },
      "ref": null,
      "rendered": "Loading...",
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
